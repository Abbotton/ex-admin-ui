<?php

namespace ExAdmin\ui\component\grid\grid;

use ExAdmin\ui\component\Component;
use ExAdmin\ui\support\Arr;

/**
 * @method static $this create($data,string $label = 'name',string $id = 'id') 创建
 */
class Sidebar extends Component
{
    protected $name = 'ExSidebar';
    public function __construct($data,string $label = 'name',string $id = 'id',Grid $grid)
    {
        $this->grid = $grid;
        $this->attr('sourceList',$data);
        $this->attr('fieldNames',[
            'children' => 'children',
            'title'    => $label,
            'key'      => $id,
        ]);
    }
    /**
     * 隐藏侧边栏全部
     * @param bool $bool
     * @return $this
     */
    public function hideAll($bool=true){
        $this->attr('hideAll', $bool);
        return $this;
    }
    /**
     * 树形
     * @param string $id 主键
     * @param string $pid 上级id
     * @param string $children 下级成员
     */
    public function tree(string $id = 'id', string $pid = 'pid', string $children = 'children'){
        $treeData = Arr::tree($this->attr('sourceList'), $id, $pid, $children);
        $this->attr('source',$treeData);
        $fieldNames =  $this->attr('fieldNames');
        $this->attr('fieldNames',[
            'children' => $children,
            'title'    => $fieldNames['title'],
            'key'      => $id,
        ]);
    }
    /**
     * 请求字段名
     * @param $name
     * @return $this
     */
    public function field($name)
    {
        $this->grid->getFilter()->eq()->text($name)->getFormItem()->style(['display' => 'none']);
        $this->attr('field', $name);
        return $this;
    }
    /**
     * 默认选中
     * @param $value
     * @return $this
     */
    public function default($value){
        $this->attr('default',$value);
        return $this;
    }
    public function jsonSerialize()
    {
        if(!$this->attr('source')){
            $this->attr('source',$this->attr('sourceList'));
        }
        return parent::jsonSerialize(); // TODO: Change the autogenerated stub
    }
}
